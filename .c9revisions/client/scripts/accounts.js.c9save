{"ts":1369232118000,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Validators, helpers\n//\n\n// Trim Input\nfunction trimInput(val) {\n  return val.replace(/^\\s*|\\s*$/g, \"\");\n}\n\n// Validations\nfunction isEmail(val, field) {\n  if (val.indexOf('@') !== -1) {\n      return true;\n    } else {\n      Session.set('displayMessage', 'Error & Please enter a valid email address.');\n      return false;\n    }\n}\n\nfunction isValidPassword(val, field) {\n  if (val.length >= 6) {\n    return true;\n  } else {\n    Session.set('displayMessage', 'Error & Your password should be 6 characters or longer.');\n    return false;\n  }\n}\n\nfunction isNotEmpty(val, field) {\n  // if null or empty, return false\n  if (!val || val === ''){\n    Session.set('displayMessage', 'Error & Please fill in all required fields.');\n    return false;\n  }\n  return true;\n}\n\n// Login Form Helpers\nTemplate.loginForm.helpers({\n\n  loginForm: function(){\n    if (!Session.get('formView'))\n      return true;\n  },\n\n  createAccount: function(){\n    return Session.equals('formView', 'createAccountForm');\n  },\n\n  passwordRecovery: function(){\n    return Session.equals('formView', 'passwordRecoveryForm');\n  }\n\n});\n\n// On successful login, hide the overlay button. And\n// if we are in the create project flow, then create\n// the project and move to the project view.\nfunction onLogin(err){\n  if (err) {\n    Session.set('displayMessage', 'Login Error &' + err.reason);\n    return;\n  }\n\n  if (Session.get('createProjectFlow'))\n    createProject();\n\n  Session.set('overlay', null);\n}\n\n// Create a project if we are in 'createProjectFlow'.\nfunction createProject(){\n  var videoObject = Session.get('createProjectFlow');\n\n  var newProject = {\n    user: Meteor.userId(),\n    created: new Date(),\n    type: videoObject.type,\n    url : videoObject.url\n  };\n\n  if (videoObject.type === 'html') {\n    newProject.name = videoObject.name;\n  }\n\n  // actually insert new object into database\n  var newVideo = Videos.insert(newProject);\n  Router.navigate('project/' + newVideo);\n\n  delete Subtitler.videoNode;\n  Session.set('currentVideo', newVideo);\n  Session.set('loadingError', null);\n  Session.set('currentView', 'app');\n  Session.set('createProjectFlow', null);\n}\n\n\n// Login Form Events\nTemplate.loginForm.events({\n\n  'submit #login-form' : function(e, t) {\n    e.preventDefault();\n    var email = trimInput(t.find('#login-email').value.toLowerCase())\n      , password = t.find('#login-password').value;\n\n    if (isNotEmpty(email, 'loginError')\n        && isNotEmpty(password, 'loginError'))\n    {\n      Meteor.loginWithPassword(email, password, function(err){\n        onLogin(err);\n      });\n    }\n\n    return false;\n  },\n\n  'click #forgot-password' : function(e, t) {\n    Session.set('formView', 'passwordRecoveryForm');\n  },\n\n  'click #create-account' : function(e, t) {\n    Session.set('formView', 'createAccountForm');\n  },\n\n  'click a.google' : function(e, t){\n    Meteor.loginWithGoogle(function(err){\n      onLogin(err);\n    });\n  },\n\n  'click a.facebook' : function(e, t){\n    Meteor.loginWithFacebook(function(err){\n     onLogin(err);\n    });\n  },\n\n  'click a.twitter' : function(e, t){\n    Meteor.loginWithTwitter(function(err){\n      onLogin(err);\n    });\n  }\n\n});\n\n// Reset our Session variables when the template\n// is destroyed.\nTemplate.loginForm.destroyed = function(){\n  Session.set('formView', null);\n};\n\n// Create an account and login the user.\nTemplate.createAccountForm.events({\n\n  'submit #register-form' : function(e, t) {\n    var email = trimInput(t.find('#account-email').value.toLowerCase())\n      , password = t.find('#account-password').value;\n\n    if (isNotEmpty(email, 'accountError')\n        && isNotEmpty(password, 'accountError')\n        && isEmail(email, 'accountError')\n        && isValidPassword(password, 'accountError'))\n    {\n      Session.set('loading', true);\n      Accounts.createUser({email: email, password : password}, function(err){\n        if (err && err.error === 403) {\n          Session.set('displayMessage', 'Account Creation Error &' + err.reason);\n          Session.set('loading', false);\n        } else {\n          if (Session.get('createProjectFlow')) createProject();\n          Session.set('overlay', null);\n        }\n        Session.set('loading', false);\n      });\n    }\n    return false;\n  }\n\n});\n\nTemplate.passwordRecoveryForm.helpers({\n\n  resetToken: function(){\n    return Session.get('resetPassword');\n  }\n\n});\n\nTemplate.passwordRecoveryForm.events({\n\n  'submit #recovery-form' : function(e, t) {\n      var email = trimInput(t.find('#recovery-email').value);\n      if (isNotEmpty(email, 'recoveryError') && isEmail(email, 'recoveryError')) {\n        Session.set('loading', true);\n        Accounts.forgotPassword({email: email}, function(err){\n        if (err)\n          Session.set('displayMessage', 'Password Reset Error & ' + err.reason);\n        else {\n          Session.set('displayMessage', 'Email Sent & Please check your email to reset your password.');\n          Session.set('passwordView', null);\n          Router.navigate('');\n        }\n        Session.set('loading', false);\n      });\n      }\n      return false;\n    },\n\n    'submit #new-password' : function(e, t) {\n      var pw = t.find('#new-password-password').value;\n      if (isNotEmpty(pw) && isValidPassword(pw)) {\n        Session.set('loading', true);\n        Accounts.resetPassword(Session.get('resetPassword'), pw, function(err){\n          if (err)\n            Session.set('displayMessage', 'Password Reset Error & '+ err.reason);\n          else {\n            Session.set('currentView', 'library');\n            Session.set('resetPassword', null);\n            Router.navigate('library');\n          }\n          Session.set('loading', false);\n        });\n      }\n    return false;\n    }\n});"]],"start1":0,"start2":0,"length1":0,"length2":5697}]],"length":5697}
