{"ts":1369232065421,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"Subtitler = {};\n\nVideos = new Meteor.Collection('videos');\nSubtitles = new Meteor.Collection('subtitles');\n\n/**\n * Permissions\n */\n\n// XXX both should have shared functions, since permissions are the same\n// Basically, only owners of the documents are allowed to write\nVideos.allow({\n\n  insert : function(userId, doc) {\n    return (userId && doc.user === userId);\n  },\n\n  update : function(userId, doc) {\n    return doc.user === userId;\n  },\n\n  remove : function(userId, doc) {\n    return doc.user == userId;\n  },\n\n  fetch: ['user']\n});\n\nSubtitles.allow({\n\n  insert : function(userId, doc) {\n    return (userId && doc.user === userId);\n  },\n\n  update : function(userId, doc) {\n    return doc.user === userId;\n  },\n\n  remove : function(userId, doc) {\n    return doc.user === userId;\n  },\n\n  fetch: ['user']\n\n});\n\n\n  /**\n   * PUBLISH\n   */\n\n  Meteor.publish('subtitles', function(videoId) {\n    return Subtitles.find({ videoId: videoId }, {sort: ['startTime', 'asc']});\n  });\n\n  Meteor.publish('videos', function(userId){\n    return Videos.find({ user: userId });\n  });\n\n  /**\n   * EMAIL\n   */\n\n  Accounts.emailTemplates.siteName = \"fiddleware Subtitles\";\n  // Accounts.emailTemplates.from = \"fiddleware Subtitles <no-reply@fiddleware.com\";\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1240}]],"length":1240}
{"contributors":[],"silentsave":false,"ts":1369232023859,"patch":[[{"diffs":[[-1,"Subtitler = {};\n\nVideos = new Meteor.Collection('videos');\nSubtitles = new Meteor.Collection('subtitles');\n\n/**\n * Permissions\n */\n\n// XXX both should have shared functions, since permissions are the same\n// Basically, only owners of the documents are allowed to write\nVideos.allow({\n\n  insert : function(userId, doc) {\n    return (userId && doc.user === userId);\n  },\n\n  update : function(userId, doc) {\n    return doc.user === userId;\n  },\n\n  remove : function(userId, doc) {\n    return doc.user == userId;\n  },\n\n  fetch: ['user']\n});\n\nSubtitles.allow({\n\n  insert : function(userId, doc) {\n    return (userId && doc.user === userId);\n  },\n\n  update : function(userId, doc) {\n    return doc.user === userId;\n  },\n\n  remove : function(userId, doc) {\n    return doc.user === userId;\n  },\n\n  fetch: ['user']\n\n});\n\n\n  /**\n   * PUBLISH\n   */\n\n  Meteor.publish('subtitles', function(videoId) {\n    return Subtitles.find({ videoId: videoId }, {sort: ['startTime', 'asc']});\n  });\n\n  Meteor.publish('videos', function(userId){\n    return Videos.find({ user: userId });\n  });"],[0,"\n\n  "]],"start1":0,"start2":0,"length1":1071,"length2":4}]],"length":173,"saved":false}
